// <auto-generated />
using System;
using ASPNET.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ASPNET.Migrations
{
    [DbContext(typeof(ProyectoWinFormContext))]
    [Migration("20200304162310_allOK")]
    partial class allOK
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ASPNET.Models.AutorSet", b =>
                {
                    b.Property<int>("AutorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AutorId");

                    b.ToTable("AutorSet");
                });

            modelBuilder.Entity("ASPNET.Models.ClasificacionSet", b =>
                {
                    b.Property<int>("ClasificacionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClasificacionId");

                    b.ToTable("ClasificacionSet");
                });

            modelBuilder.Entity("ASPNET.Models.ConfiguracionSet", b =>
                {
                    b.Property<int>("ConfiguracionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("MaxPrestamoUsuario")
                        .HasColumnType("int");

                    b.Property<int?>("NumDiasPrestamo1")
                        .HasColumnType("int");

                    b.Property<int?>("NumDiasPrestamo2")
                        .HasColumnType("int");

                    b.HasKey("ConfiguracionId");

                    b.ToTable("ConfiguracionSet");
                });

            modelBuilder.Entity("ASPNET.Models.EditorialSet", b =>
                {
                    b.Property<int>("EditorialId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CodigoPostal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonaContacto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Poblacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Provincia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RazonSocial")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono2")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EditorialId");

                    b.ToTable("EditorialSet");
                });

            modelBuilder.Entity("ASPNET.Models.GeneroSet", b =>
                {
                    b.Property<int>("GeneroId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GeneroId");

                    b.ToTable("GeneroSet");
                });

            modelBuilder.Entity("ASPNET.Models.LibroSet", b =>
                {
                    b.Property<int>("LibroId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AutorAutorId")
                        .HasColumnType("int");

                    b.Property<int>("ClasificacionClasificacionId")
                        .HasColumnType("int");

                    b.Property<string>("Descripción")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EditorialEditorialId")
                        .HasColumnType("int");

                    b.Property<int>("GeneroGeneroId")
                        .HasColumnType("int");

                    b.Property<byte[]>("Imagen")
                        .HasColumnType("varbinary(max)");

                    b.Property<int?>("Stock")
                        .HasColumnType("int");

                    b.Property<int?>("StockDisponible")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LibroId");

                    b.HasIndex("AutorAutorId")
                        .HasName("IX_FK_AutorLibro");

                    b.HasIndex("ClasificacionClasificacionId")
                        .HasName("IX_FK_ClasificacionLibro");

                    b.HasIndex("EditorialEditorialId")
                        .HasName("IX_FK_EditorialLibro");

                    b.HasIndex("GeneroGeneroId")
                        .HasName("IX_FK_GeneroLibro");

                    b.ToTable("LibroSet");
                });

            modelBuilder.Entity("ASPNET.Models.PrestamoSet", b =>
                {
                    b.Property<int>("PrestamoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("FechaDevolucion")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime");

                    b.Property<int>("LibroLibroId")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioDni")
                        .IsRequired()
                        .HasColumnName("UsuarioDNI")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.HasKey("PrestamoId");

                    b.HasIndex("LibroLibroId")
                        .HasName("IX_FK_LibroPrestamo");

                    b.HasIndex("UsuarioDni")
                        .HasName("IX_FK_UsuarioPrestamo");

                    b.ToTable("PrestamoSet");
                });

            modelBuilder.Entity("ASPNET.Models.UsuarioSet", b =>
                {
                    b.Property<string>("Dni")
                        .HasColumnName("DNI")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodigoPostal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("InicioSesion")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Poblacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Provincia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Salt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono2")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Dni");

                    b.ToTable("UsuarioSet");
                });

            modelBuilder.Entity("ASPNET.Models.LibroSet", b =>
                {
                    b.HasOne("ASPNET.Models.AutorSet", "AutorAutor")
                        .WithMany("LibroSet")
                        .HasForeignKey("AutorAutorId")
                        .HasConstraintName("FK_AutorLibro")
                        .IsRequired();

                    b.HasOne("ASPNET.Models.ClasificacionSet", "ClasificacionClasificacion")
                        .WithMany("LibroSet")
                        .HasForeignKey("ClasificacionClasificacionId")
                        .HasConstraintName("FK_ClasificacionLibro")
                        .IsRequired();

                    b.HasOne("ASPNET.Models.EditorialSet", "EditorialEditorial")
                        .WithMany("LibroSet")
                        .HasForeignKey("EditorialEditorialId")
                        .HasConstraintName("FK_EditorialLibro")
                        .IsRequired();

                    b.HasOne("ASPNET.Models.GeneroSet", "GeneroGenero")
                        .WithMany("LibroSet")
                        .HasForeignKey("GeneroGeneroId")
                        .HasConstraintName("FK_GeneroLibro")
                        .IsRequired();
                });

            modelBuilder.Entity("ASPNET.Models.PrestamoSet", b =>
                {
                    b.HasOne("ASPNET.Models.LibroSet", "LibroLibro")
                        .WithMany("PrestamoSet")
                        .HasForeignKey("LibroLibroId")
                        .HasConstraintName("FK_LibroPrestamo")
                        .IsRequired();

                    b.HasOne("ASPNET.Models.UsuarioSet", "UsuarioDniNavigation")
                        .WithMany("PrestamoSet")
                        .HasForeignKey("UsuarioDni")
                        .HasConstraintName("FK_UsuarioPrestamo")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
